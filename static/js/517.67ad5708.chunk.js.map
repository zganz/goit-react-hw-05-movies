{"version":3,"file":"static/js/517.67ad5708.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,W,0HCFVI,EAAS,WACpB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,IAILG,EAAAA,EAAAA,GAAU,SAAU,GAAI,GAAf,UAAsBH,IAASI,MAAK,SAAAC,GAC3C,IAAMC,EAASD,EAAKE,QAAQrB,KAAI,SAAAsB,GAAE,MAAK,CAAEnB,GAAImB,EAAGnB,GAAIG,MAAOgB,EAAGhB,UAC9DI,EAAeU,QAEhB,CAACN,IAOJ,OACE,iCACE,kBAAMS,OAAO,GAAGC,SAPC,SAAAC,GACnBA,EAAIC,iBACJb,EAAgB,CAAEC,MAAOW,EAAIE,OAAOC,OAAOC,SAKzC,WACE,kBAAOC,KAAK,OAAOC,YAAY,eAAeC,KAAK,YACnD,mBAAQF,KAAK,SAAb,wBAGF,SAAClC,EAAA,EAAD,CAAYC,OAAQY,QC3B1B,EAJwB,WACtB,OAAO,SAACF,EAAD,M,oDCHT,IAAM0B,EAAU,mCACVC,EAAW,gCAEXC,EAAQ,CACZC,OAAQ,qBACRC,QAAS,SACTT,OAAQ,gBAGGX,EAAY,SAACa,GAAsC,IAAhC3B,EAA+B,uDAA1B,GAAImC,EAAsB,uDAAd,GAAIxB,EAAU,uCAC7D,OAAOyB,MAAM,GAAD,OACPL,GADO,OACIC,EAAML,IADV,OACkB3B,GADlB,OACuBmC,EADvB,oBACwCL,EADxC,kBACyDnB,IAElEI,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF","sources":["components/MoviesList/MoviesList.jsx","components/Movies/Movies.jsx","pages/PageSearchMovie.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(trend => (\n        <li key={trend.id}>\n          <Link to={`/movies/${trend.id}`} state={{ from: location }}>\n            {trend.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { fetchData } from '../../service/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from '../MoviesList/MoviesList';\n\nexport const Movies = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchData('search', '', '', `${query}`).then(data => {\n      const result = data.results.map(el => ({ id: el.id, title: el.title }));\n      setSearchMovie(result);\n    });\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: evt.target.search.value });\n  };\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Search movie\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <MoviesList movies={searchMovie} />\n    </>\n  );\n};\n","import { Movies } from '../components/Movies/Movies';\n\nconst PageSearchMovie = () => {\n  return <Movies />;\n};\n\nexport default PageSearchMovie;\n","const API_KEY = 'de45d36e881aeb0e75823e553c4d37c7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst TYPES = {\n  trends: 'trending/movie/day',\n  details: 'movie/',\n  search: 'search/movie',\n};\n\nexport const fetchData = (type, id = '', param = '', query) => {\n  return fetch(\n    `${BASE_URL}${TYPES[type]}${id}${param}?api_key=${API_KEY}&query=${query}`\n  )\n    .then(response => response.json())\n    .catch(err => console.log(err));\n};\n"],"names":["MoviesList","movies","location","useLocation","map","trend","to","id","state","from","title","Movies","useState","searchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchData","then","data","result","results","el","action","onSubmit","evt","preventDefault","target","search","value","type","placeholder","name","API_KEY","BASE_URL","TYPES","trends","details","param","fetch","response","json","catch","err","console","log"],"sourceRoot":""}